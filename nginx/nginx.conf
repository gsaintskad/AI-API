worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80; # Nginx listens on port 80
        server_name skad.fun www.skad.fun;
        # Location for serving static files (the root /)
        location / {
            # Set the root directory where your static files are located inside the container
            root /usr/share/nginx/html;

            # Define the default file to serve for root requests
            index index.html index.htm;

            # Important for Single Page Applications (SPAs):
            # If a file is not found, try treating the URI as a directory,
            # and if that fails, serve the index.html file.
            # This allows your client-side router to handle routes.
            try_files $uri $uri/ /index.html;
        }

        # Location for proxying API requests
        location /api {
            # Proxy requests starting with /api to your API container
            # Replace 'my-api' with the name of your API service/container
            # Replace '3000' with the port your API container is listening on
            proxy_pass http://nestjs-api:3000;

            # Pass necessary headers to the backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: Adjust timeouts if needed
            # proxy_connect_timeout 60s;
            # proxy_send_timeout 60s;
            # proxy_read_timeout 60s;
        }

        # Optional: Serve other specific paths directly if needed
        # location /another-static-dir {
        #     alias /path/to/another/static/dir/inside/container;
        # }
    }
     # Server block to handle HTTPS requests
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2; # Listen on IPv6 too
        server_name skad.fun www.skad.fun; # Ensure semicolon is here!

        # SSL Certificate paths (inside the container, via shared volume)
        ssl_certificate /etc/letsencrypt/live/skad.fun/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/skad.fun/privkey.pem;

        # Recommended SSL settings (consider using https://ssl-config.mozilla.org/)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        # Add Diffie-Hellman parameters (generate if you don't have one)
        # ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem; # Generate using: openssl dhparam -out /path/to/dhparam.pem 4096

        # Add HSTS header (optional but recommended)
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Location for serving static files (the root /)
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Location for proxying API requests
        location /api {
            proxy_pass http://nestjs-api:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}